spring.application.name=PE-StadiumBookingBE


# Server configuration with SSL
server.port=8443
server.ssl.key-store-type=PKCS12
server.ssl.key-store=${KEYSTORE_PATH}
server.ssl.key-store-password=${KEYSTORE_PASSWORD}
server.ssl.key-alias=tomcat

# Mailgun configuration
mailgun.api.key=${MAILGUN_API_KEY}
mailgun.domain=${MAILGUN_DOMAIN}
mailgun.from.email=${MAILGUN_FROM_EMAIL}

# PostgreSQL database configuration
spring.datasource.url=${POSTGRES_URL_TRANSACTION_POOLER}
spring.datasource.username=${POSTGRES_USERNAME}
spring.datasource.password=${POSTGRES_PASSWORD}
spring.datasource.driver-class-name=org.postgresql.Driver
spring.datasource.hikari.data-source-properties.prepareThreshold=0

# Optional but recommended
spring.jpa.hibernate.ddl-auto=update
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.sql.init.mode=always



# Google OAuth2 SSO configuration
spring.security.oauth2.client.registration.google.client-id=${GOOGLE_CLIENT_ID}
spring.security.oauth2.client.registration.google.client-secret=${GOOGLE_CLIENT_SECRET}
spring.security.oauth2.client.registration.google.scope=openid,profile,email
spring.security.oauth2.client.registration.google.client-name=Google
spring.security.oauth2.client.registration.google.redirect-uri=${NEXTAUTH_URL}

spring.security.oauth2.client.provider.google.authorization-uri=https://accounts.google.com/o/oauth2/v2/auth
spring.security.oauth2.client.provider.google.token-uri=https://oauth2.googleapis.com/token
spring.security.oauth2.client.provider.google.user-info-uri=https://openidconnect.googleapis.com/v1/userinfo
spring.security.oauth2.client.provider.google.user-name-attribute=sub



